// Premium service plugin for BBS Core-UI.
const premiumServer = 'http://localhost:8000';

// This will be replaced by the server.
const filePath = null;
if(!filePath) throw new Error('filePath is not defined');

// Try to import bbs-common from our server, defaulting to the CDN if that fails.
const getBbsCommon = async() => {
    let isRemote = false;
    const bbs = await import(`${premiumServer}/site/bbs-common.js`).catch(() => {
        isRemote = true;
        return import('https://cdn.jsdelivr.net/npm/@dewebio/bbs-common@latest/index.min.js');
    });
    console.info(`bbs-common library loaded from ${isRemote ? 'remote CDN' : 'local file'}`, bbs);

    return bbs;
};

// Define Single SPA lifecycle entry points as AMD modules.
define({
    mount: async(sspaArgs) => {
        const bbs = await getBbsCommon();
        const authToken = await bbs.getAuthToken();
        const productDetails = await (await fetch(`${premiumServer}/productDetails?path=${filePath}`, {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({filePath, authToken})
        })).json();

        const ui = document.createElement('div');
        const player = document.createElement('p');
        player.textContent = JSON.stringify(productDetails);
        ui.appendChild(player);
        sspaArgs.domElement.appendChild(ui);
    },
    // We are not currently using these lifecycle functions.
    bootstrap: async() => {},
    unmount: async() => {},
    unload: async() => {}
});
